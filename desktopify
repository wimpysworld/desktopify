#!/usr/bin/env bash

# Check if the user running the script is root
if [ "$(id -u)" -ne 0 ]; then
  echo "[!] ERROR: You need to be root."
  exit 1
fi

HOST_ARCH=$(uname -m)
if [ "${HOST_ARCH}" != "armv7l" ] && [ "${HOST_ARCH}" != "aarch64" ]; then
  echo "[!] This script is only intended to run on ARM devices."
  exit 1
fi

# Check if we're running on a Raspberry Pi
PI_MODEL=$(grep ^Model /proc/cpuinfo  | cut -d':' -f2- | sed 's/ R/R/')
if [[ "${PI_MODEL}" == *"Raspberry Pi"* ]]; then
  echo "[+] Configuring your ${PI_MODEL}"
else
  echo "[!] This is not a Raspberry Pi. Quitting!"
  exit 1
fi

# Check if we're running Ubuntu
IS_UBUNTU=$(lsb_release -is)
if [ "${IS_UBUNTU}" != "Ubuntu" ]; then
  echo "[!] This script is only intended to run on Ubuntu."
  exit 1
fi

# Check if we're running 20.04
CODENAME=$(lsb_release -cs)
if [ "${CODENAME}" != "focal" ]; then
  echo "[!] This script is only intended to run on Ubuntu 20.04."
  exit 1
fi

# Display help usage
function usage () {
  echo
  echo "Usage"
  echo "  $0 --de <desktop environment>"
  echo
  echo "Available desktop environments are"
  echo "  ubuntu"
  echo "  ubuntu-mate"
  echo "  ubuntu-budgie"
  echo "  ubuntu-kylin"
  echo "  ubuntu-studio"
  echo "  kubuntu"
  echo "  lubuntu"
  echo "  xubuntu"
}

function apply_tweaks() {
  if [ "${DESKTOP_ENVIRONMENT}" == "ubuntu-mate" ]; then
    cat <<EOM > /usr/share/glib-2.0/schemas/50_ubuntu-mate-raspi-tweaks.gschema.override
[org.mate.interface]
enable-animations=false

[org.mate.Marco.general]
compositing-manager=false

[org.mate.session.required-components]
windowmanager='marco-no-composite'
EOM
    glib-compile-schemas /usr/share/glib-2.0/schemas/
  fi
}

function configure_network() {
  echo "[+] Will now configure network"
  # Disable cloud-init from managing the network
  echo "network: {config: disabled}" > /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg

  # Instruct netplan to hand all network management to NetworkManager
  cat <<EOM > /etc/netplan/01-network-manager-all.yaml
# Let NetworkManager manage all devices on this system
network:
  version: 2
  renderer: NetworkManager
EOM

  # Disable Wifi Powersaving to improve Pi WiFi performance
  if [ -e /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf ]; then
    sed -i 's/wifi.powersave = 3/wifi.powersave = 2/' /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
  fi
}

# Take command line arguments
while [ $# -gt 0 ]; do
  case "${1}" in
    -de|--de)
      DESKTOP_ENVIRONMENT="${2}"
      shift
      shift;;
    -h|--h|-help|--help)
      usage
      exit 0;;
    *)
      echo "[!] ERROR: \"${1}\" is not a supported parameter."
      echo "${DESKTOP_ENVIRONMENT}"
      usage
      exit 1;;
  esac
done

# Set variables based on chosen desktop environment
case "${DESKTOP_ENVIRONMENT}" in
  ubuntu)
    echo "specified ubuntu desktop"
    DESKTOP_PACKAGES="ubuntu-desktop"
    shift;;
  ubuntu-mate)
    echo "[+] Specified Ubuntu Mate desktop"
    DESKTOP_PACKAGES="ubuntu-mate-desktop"
    shift;;
  ubuntu-budgie)
    echo "[+] Specified Ubuntu Budgie desktop"
    DESKTOP_PACKAGES="ubuntu-budgie-desktop"
    shift;;
  ubuntu-kylin)
    echo "[+] Specified Ubunty Kylin desktop"
    DESKTOP_PACKAGES="ubuntukylin-desktop"
    shift;;
  ubuntu-studio)
    echo "[+] Specified Ubuntu Studio desktop"
    DESKTOP_PACKAGES="ubuntustudio-desktop"
    shift;;
  kubuntu)
    echo "[+] Specified Kubuntu desktop"
    DESKTOP_PACKAGES="kubuntu-desktop"
    shift;;
  lubuntu)
    echo "[+] Specified Lubuntu desktop"
    DESKTOP_PACKAGES="lubuntu-desktop"
    shift;;
  xubuntu)
    echo "[+] Specified Xubuntu desktop"
    DESKTOP_PACKAGES="xubuntu-desktop"
    shift;;
  *)
    if [ -z "${DESKTOP_ENVIRONMENT}" ]; then
      echo "[!] ERROR: Please specifiy a desktop environment"
    else
      echo "[!] ERROR: ${DESKTOP_ENVIRONMENT} is not a valid desktop environment"
    fi
    usage
    exit 1;;
esac


# Do the installation
HARDWARE_PACKAGES="pi-bluetooth"
echo "[+] Will now install ${DESKTOP_PACKAGES} and ${HARDWARE_PACKAGES}"

apt install -y "${DESKTOP_PACKAGES}^"
apt install -y "${HARDWARE_PACKAGES}"

configure_network
apply_tweaks